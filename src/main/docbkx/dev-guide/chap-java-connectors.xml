<?xml version="1.0" encoding="UTF-8"?>
<!--
  ! CCPL HEADER START
  !
  ! This work is licensed under the Creative Commons
  ! Attribution-NonCommercial-NoDerivs 3.0 Unported License.
  ! To view a copy of this license, visit
  ! http://creativecommons.org/licenses/by-nc-nd/3.0/
  ! or send a letter to Creative Commons, 444 Castro Street,
  ! Suite 900, Mountain View, California, 94041, USA.
  !
  ! You can also obtain a copy of the license at
  ! legal-notices/CC-BY-NC-ND.txt.
  ! See the License for the specific language governing permissions
  ! and limitations under the License.
  !
  ! If applicable, add the following below this CCPL HEADER, with the fields
  ! enclosed by brackets "[]" replaced with your own identifying information:
  !      Portions Copyright [yyyy] [name of copyright owner]
  !
  ! CCPL HEADER END
  !
  !      Copyright 2012-2015 ForgeRock AS
  !
-->
<chapter xml:id='chap-java-connectors'
 xmlns='http://docbook.org/ns/docbook' version='5.0' xml:lang='en'
 xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
 xsi:schemaLocation='http://docbook.org/ns/docbook http://docbook.org/xml/5.0/xsd/docbook.xsd'
 xmlns:xlink='http://www.w3.org/1999/xlink'
 xmlns:xinclude='http://www.w3.org/2001/XInclude'>
 <title>Writing Java Connectors</title>

 <para>
  If none of the existing OpenICF connectors are suitable for your deployment,
  you can write your own connector bundle. This chapter describes the steps to
  develop an OpenICF-compatible Java connector.
 </para>
 <para>
  Similar chapters exist to help you with writing scripted Groovy, and
  PowerShell connectors.
 </para>

 <section xml:id="before-you-begin">
  <title>Before You Begin</title>
  <para>
   Before you start developing your own connector, familiarize yourself with the
   structure of the SPI, by reading the Javadoc for the <link
   xlink:href="http://openicf.forgerock.org/apidocs/org/identityconnectors/framework/spi/package-frame.html"
   xlink:show="new">OpenICF framework</link> and the supported <link
   xlink:href="http://openicf.forgerock.org/apidocs/org/identityconnectors/framework/spi/operations/package-frame.html"
   xlink:show="new">OpenICF operations</link>. You can also download and study
   the source code for the existing connectors from the
   <link xlink:href="https://forgerock.org/projects/getting-the-source-code/"
   xlink:show="new">ForgeRock Projects page</link>.
  </para>
 </section>

 <section xml:id="using-the-connector-archetype">
  <title>Using the Connector Archetype</title>
  <para>
   OpenICF provides a Maven connector archetype that enables you to get started
   with connector development.
  </para>
  <note>
   <para>
    A separate archetype is available for building connectors with the Groovy
    Connector Toolkit. For more information, see <link xlink:show="new"
    xlink:href="dev-guide#chap-groovy-connectors"
    xlink:role="http://docbook.org/xlink/role/olink"><citetitle>Writing
    Connectors With the Groovy Connector Toolkit</citetitle></link>.
   </para>
  </note>
  <para>
   To get started with the Connector Archetype, execute the following command,
   customizing these options to describe your new connector:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     <literal>-DartifactId=sample-connector</literal>
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>-Dversion=0.0-SNAPSHOT</literal>
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>-Dpackage=org.forgerock.openicf.connectors.sample</literal>
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>-DconnectorName=Sample</literal>
    </para>
   </listitem>
  </itemizedlist>
  <para>
   This command imports the archetype and generates a new connector project.
  </para>
  <screen>$ <userinput>mvn archetype:generate \
     -DarchetypeGroupId=org.forgerock.openicf \
     -DarchetypeArtifactId=connector-archetype \
     -DarchetypeVersion=1.0.0-SNAPSHOT \
     -DremoteRepositories=http://maven.forgerock.org/repo/snapshots \
     -DarchetypeRepository=http://maven.forgerock.org/repo/snapshots \
     -DgroupId=org.forgerock.openicf.connectors \
     -DartifactId=sample-connector \
     -Dversion=0.0-SNAPSHOT \
     -Dpackage=org.forgerock.openicf.connectors.sample \
     -DconnectorName=Sample</userinput>
<computeroutput>[INFO] Scanning for projects...
[INFO]
[INFO] ------------------------------------------------------------------------
[INFO] Building Maven Stub Project (No POM) 1
[INFO] ------------------------------------------------------------------------
[INFO]
[INFO] >>> maven-archetype-plugin:2.3:generate (default-cli) @ standalone-pom >>>
...
ALL_OPERATIONS: n
OP_AUTHENTICATE: n
OP_CREATE: y
OP_DELETE: y
OP_RESOLVEUSERNAME: n
OP_SCHEMA: n
OP_SCRIPTONCONNECTOR: n
OP_SCRIPTONRESOURCE: n
OP_SEARCH: y
OP_SYNC: n
OP_TEST: y
OP_UPDATE: y
OP_UPDATEATTRIBUTEVALUES: n
attributeNormalizer: n
compatibility_version: 1.1
connectorName: Sample
framework_version: 1.0
jira_componentId: 10191
jira_fixVersionIds: 0
poolableConnector: n
 Y: :
</computeroutput></screen>
  <para>
   At this point, you can enter Y (YES) to accept the default project, or N (NO)
   to customize the project for your connector. As you can see from the
   preceding output, the default connector supports only the create, delete,
   search, test, and update operations, and is not a poolable connector. To add
   support for additional operations, or to change any of the connector
   parameters seen in this output, enter N (NO). The archetype then prompts you
   to set values for each parameter.
  </para>
  <para>
   After you have imported the archetype once, you can use the local version of
   the archetype, as follows:
  </para>
  <screen>$ mvn archetype:generate -DarchetypeCatalog=local</screen>

 </section>

 <section xml:id="java-connector-operations">
  <title>Implementing OpenICF Operations</title>
  <para>
   After you have generated the archetype, implement the OpenICF operations that
   your connector will support.
  </para>
  <para>
   For information about implementing operations, and examples for a Java
   connector, see <link xlink:show="new" xlink:href="dev-guide#chap-openicf-spi"
   xlink:role="http://docbook.org/xlink/role/olink"><citetitle>Implementing the
   OpenICF SPI</citetitle></link>.
  </para>
  <para>
   Then build the connector, as follows:
  </para>
 </section>

 <section xml:id="java-connector-bundling">
  <title>Bundling the Java Connector</title>
  <screen>
$ cd sample-connector
$ mvn install</screen>
 </section>

 <section xml:id="next-steps">
  <title>Next Steps</title>
  <para>
   If you are thinking of contributing your connector to the OpenICF project,
   review the documentation around <link
   xlink:href="https://wikis.forgerock.org/confluence/display/devcom/Coding+Style+and+Guidelines"
   xlink:show="new">coding conventions</link> and <link
   xlink:href="http://openicf.forgerock.org/connector-framework-contract/index.html"
   xlink:show="new">contract tests</link>. The contract tests are an automated
   suite of tests designed to ensure that your connector looks, feels, and
   behaves like a connector should.
  </para>
  <para>
   You are welcome to join the community and ask questions on the <link
   xlink:href="https://lists.forgerock.org/mailman/listinfo/openicf-dev"
   xlink:show="new">mailing list</link>, to <link
   xlink:href="https://bugster.forgerock.org/jira/browse/OPENICF"
   xlink:show="new">report bugs</link>, and submit patches when you <link
   xlink:href="http://www.forgerock.org/get_involved.html" xlink:show="new">get
   involved</link>.
  </para>
 </section>

</chapter>
